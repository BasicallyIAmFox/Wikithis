[h1][url=https://discord.gg/rrxE78cyjm]Discord[/url][/h1]

Wikithis allows you to check wiki of selected item/npc ingame!
Works for every vanilla item, npc! Also will work with most modded items/npcs.

Supports multiple different languages. (all languages Terraria supports)

If you want to add support for this mod, then check lower!

[h1]Adding crossmod support[/h1]
It's fairly simple to add cross-mod support!

First you SHOULD have wiki for your own mod, that's important!
Then, add some code to your Mod class that invokes Mod.Call on the Wikithis mod. Make sure to follow the message format perfectly.
[code]
"AddModURL", Mod mod, string domain, [OPTIONAL] GameCulture.CultureName culture[/code]

[code]
public override void Load() // You can use any other loading method, doesn't matters.
{
    ModLoader.TryGetMod("Wikithis", out Mod wikithis);
    if (wikithis != null && !Main.dedServ)
    {
        wikithis.Call("AddModURL", this, "examplemod.wiki.gg");
        
        // You can also use call ID for some calls!
        wikithis.Call(0, this, "examplemod.wiki.gg");

        // Alternatively, you can use this instead, if your wiki is on terrariamods.fandom.com
        //wikithis.Call(0, this, "terrariamods.fandom.com$Example_Mod");
        //wikithis.Call("AddModURL", this, "terrariamods.fandom.com$Example_Mod");

        // If there wiki on other languages (such as russian, spanish, chinese, etch), then you can also call that:
        //wikithis.Call(0, this, "examplemod.wiki.gg/zh", GameCulture.CultureName.Chinese)
        // ... If you need 'translation mark' ("/zh" thing) to be in the end link, then you can:
        //wikithis.Call(0, this, "examplemod.wiki.gg♛zh", GameCulture.CultureName.Chinese)
        // All translation calls should be called after english one has been registered
        
        // If you want to replace default icon for your mod, then call this. Icon should be 30x30, either way it will be cut.
        //wikithis.Call("AddWikiTexture", this, ModContent.Request<Texture2D>(pathToIcon));
        //wikithis.Call(3, this, ModContent.Request<Texture2D>(pathToIcon));

        // If you want to add wiki entries to your custom element (for example, mod enchantments, buffs, etch, literally anything).
        // Example of adding wiki pages for projectiles:
        //wikithis.Call("CustomWiki",
        //    this, // instance of your mod
        //    "ProjectileWiki", // name of wiki
        //    new Func<object, object>(x => (x as Projectile).type), // type of your entry (can be anything)
        //    new Action<Func<object, bool>, Action<object, object, string>, Func<string, Mod, string>>((hasEntryFunc, addEntryFunc, defaultSearchStr) =>
        //    {
        //        foreach (Projectile proj in ContentSamples.ProjectilesByType.Values) // iterate through each instance
        //        {
        //                if (hasEntryFunc(proj.type)) // check if entry exists, and if it does, then skip
        //                    continue;
        //                
        //                // get projectile name
        //                string name = proj.type < ProjectileID.Count
        //                    ? Language.GetTextValue($"ProjectileName.{ProjectileID.Search.GetName(proj.type)}")
        //                    : Language.GetTextValue($"Mods.{proj.ModProjectile.Mod.Name}.ProjectileName.{proj.ModProjectile.Name}");
        //                
        //                addEntryFunc(proj, proj.type, defaultSearchStr(name, proj.ModProjectile?.Mod)); // add entry
        //        }
        //    }
        //
        // Whenever you want to open your custom wiki page, then you should use this mod call:
        //wikithis.Call("OpenCustomWiki",
        //    this, // instance of your mod
        //    "ProjectileWiki",
        //    (int)ProjectileID.AdamantiteChainsaw, // id of projectile. should match type of your entry (Projectile.type is int)
        //    true // forces check for keybind, you would most likely want to keep this as it is
        //    );
    }
}[/code]

[h1]Translation Credits[/h1]
Henrykado - brazilian portuguese translation
a piece of hedgehog - russian translation
TheBrutalSkull ^-^ - french translation
Naudiz - german translation

The rest of translation files were translated using Google Translator. If you willing to re-translate those, please contact me in Discord server.